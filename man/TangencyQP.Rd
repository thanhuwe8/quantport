% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/TangencyWeights.R
\name{TangencyQP}
\alias{TangencyQP}
\title{Calculate Tangency Portfolio Weight based on Quadratic Programming}
\usage{
TangencyQP(ret, covmat, short = TRUE, rf = 0, freq)
}
\arguments{
\item{ret}{a vector stores mean return of assets (\samp{N x 1}). A vector should store daily, monthly
or quarterly return.}

\item{covmat}{a matrix stores covariance matrix of asset returns. A matrix should be scaled by daily, monthly
or quarterly return alligned with `ret` vector.}

\item{short}{a boolean stores TRUE for short sale constraint or FALSE for no constraint}

\item{rf}{a scalar store annualized risk free rate}

\item{freq}{a string stores frequency used by ret and covmat. It should be "daily", "monthly" or "quarterly"}
}
\value{
Return a list with the following slots
\item{TangencyWeight}{A vector of asset weights}
\item{portfolioret}{A scalar of tangency portfolio return (annualized)}
\item{portfoliosd}{A scalar of tangency portfolio standard deviation (annualized)}
\item{sharpeRatio}{A scalar of sharpe ratio of tangency portfolio (annualized)}
}
\description{
Compute the tangency portfolio weight which maximizes sharpe ratio based on Quadratic Programming Algorithm.
Short sale constraint could be used. Lower and upper bound for each asset could not be implemented by this
function. Please refer to `TangencySQ` to implement lower and upper boundary for weight.
}
\examples{
data(dataset1)
mean_return <- apply(dataset1[,-1], MARGIN=2, mean)
cov_matrix <- cov(dataset1[,-1])
result <- TangencyQP(mean_return, cov_matrix, short=TRUE, rf=0.07, freq="monthly")
}
\author{
Thanh Nguyen Minh
}
